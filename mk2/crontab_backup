# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.cKeeXH/crontab installed on Sat Jan 11 20:44:22 2025)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.xificI/crontab installed on Fri Sep 30 08:28:32 2022)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
@reboot  tmux start-server >> /tmp/cron.out
@reboot  /home/keith/record_boot

@hourly  cd /home/keith/planes/mk2 && . .venv/bin/activate && python splat.py 2>&1 | logger -t planes
@hourly  cd /home/keith/planes/mk2 && . .venv/bin/activate && python link.py 2>&1 | logger -t planes

#hourly , on the half hour, sync the planes on pi dir to imac icloud this keeps the splat and planes database
30 * * * * date && cd /home/keith/planes/mk2 && rsync --dirs -lptgoDP ./*kmz vrs* planes.sqb  consolidated*sqb osm_file.csv keith@imac-5k.local:/Users/keith/Library/Mobile\ Documents/com~apple~CloudDocs/Plane\ Data/planes_on_pi 2>&1 | logger -t planes

#  every thursday , update the local database with downloaded data
# 10 1 * * 4 cd /home/keith/planes/mk2 && . .venv/bin/activate && python data_service.py 2>&1 | logger -t planes
#  daily @3am - sync all the kmls to iCloud drive on the imac
0 3 * * * cd /mnt/usb_stick && echo "sync to icloud" && rsync -a --stats ./kmls/ keith@imac-5k.local:/Users/keith/Library/Mobile\ Documents/com~apple~CloudDocs/Plane\ Data/planes_kml_archive 2>&1 | logger -t planes
#  daily @2am - sync the river levels file
0 4 * * * cd $HOME/Documents/flood && echo "sync to icloud" && rsync -a --stats ./*db keith@imac-5k.local:/Users/keith/Library/Mobile\ Documents/com~apple~CloudDocs/Plane\ Data 2>&1 | logger -t flood
